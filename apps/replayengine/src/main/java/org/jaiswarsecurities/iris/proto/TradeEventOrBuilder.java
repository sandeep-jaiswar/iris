// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: iris.proto

package org.jaiswarsecurities.iris.proto;

public interface TradeEventOrBuilder extends
    // @@protoc_insertion_point(interface_extends:iris.TradeEvent)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Unique trade ID (per venue/broker)
   * </pre>
   *
   * <code>string tradeId = 1;</code>
   * @return The tradeId.
   */
  java.lang.String getTradeId();
  /**
   * <pre>
   * Unique trade ID (per venue/broker)
   * </pre>
   *
   * <code>string tradeId = 1;</code>
   * @return The bytes for tradeId.
   */
  com.google.protobuf.ByteString
      getTradeIdBytes();

  /**
   * <pre>
   * Parent order reference
   * </pre>
   *
   * <code>string orderId = 2;</code>
   * @return The orderId.
   */
  java.lang.String getOrderId();
  /**
   * <pre>
   * Parent order reference
   * </pre>
   *
   * <code>string orderId = 2;</code>
   * @return The bytes for orderId.
   */
  com.google.protobuf.ByteString
      getOrderIdBytes();

  /**
   * <pre>
   * ISIN, RIC, or symbol
   * </pre>
   *
   * <code>string instrument = 3;</code>
   * @return The instrument.
   */
  java.lang.String getInstrument();
  /**
   * <pre>
   * ISIN, RIC, or symbol
   * </pre>
   *
   * <code>string instrument = 3;</code>
   * @return The bytes for instrument.
   */
  com.google.protobuf.ByteString
      getInstrumentBytes();

  /**
   * <pre>
   * Trading account ID
   * </pre>
   *
   * <code>string account = 4;</code>
   * @return The account.
   */
  java.lang.String getAccount();
  /**
   * <pre>
   * Trading account ID
   * </pre>
   *
   * <code>string account = 4;</code>
   * @return The bytes for account.
   */
  com.google.protobuf.ByteString
      getAccountBytes();

  /**
   * <pre>
   * Broker/Dealer/Exchange
   * </pre>
   *
   * <code>string counterparty = 5;</code>
   * @return The counterparty.
   */
  java.lang.String getCounterparty();
  /**
   * <pre>
   * Broker/Dealer/Exchange
   * </pre>
   *
   * <code>string counterparty = 5;</code>
   * @return The bytes for counterparty.
   */
  com.google.protobuf.ByteString
      getCounterpartyBytes();

  /**
   * <pre>
   * Executed quantity
   * </pre>
   *
   * <code>double quantity = 6;</code>
   * @return The quantity.
   */
  double getQuantity();

  /**
   * <pre>
   * Execution price
   * </pre>
   *
   * <code>double price = 7;</code>
   * @return The price.
   */
  double getPrice();

  /**
   * <pre>
   * BUY or SELL
   * </pre>
   *
   * <code>string side = 8;</code>
   * @return The side.
   */
  java.lang.String getSide();
  /**
   * <pre>
   * BUY or SELL
   * </pre>
   *
   * <code>string side = 8;</code>
   * @return The bytes for side.
   */
  com.google.protobuf.ByteString
      getSideBytes();

  /**
   * <pre>
   * Market or exchange (e.g., LSE, NYSE)
   * </pre>
   *
   * <code>string venue = 9;</code>
   * @return The venue.
   */
  java.lang.String getVenue();
  /**
   * <pre>
   * Market or exchange (e.g., LSE, NYSE)
   * </pre>
   *
   * <code>string venue = 9;</code>
   * @return The bytes for venue.
   */
  com.google.protobuf.ByteString
      getVenueBytes();

  /**
   * <pre>
   * Execution timestamp (epoch millis)
   * </pre>
   *
   * <code>int64 tradeTimestamp = 10;</code>
   * @return The tradeTimestamp.
   */
  long getTradeTimestamp();

  /**
   * <pre>
   * NEW, AMEND, CANCEL, FILLED, PARTIALLY_FILLED
   * </pre>
   *
   * <code>string status = 11;</code>
   * @return The status.
   */
  java.lang.String getStatus();
  /**
   * <pre>
   * NEW, AMEND, CANCEL, FILLED, PARTIALLY_FILLED
   * </pre>
   *
   * <code>string status = 11;</code>
   * @return The bytes for status.
   */
  com.google.protobuf.ByteString
      getStatusBytes();

  /**
   * <pre>
   * MiFID / SEC / local trade identifier
   * </pre>
   *
   * <code>string regulatoryId = 12;</code>
   * @return The regulatoryId.
   */
  java.lang.String getRegulatoryId();
  /**
   * <pre>
   * MiFID / SEC / local trade identifier
   * </pre>
   *
   * <code>string regulatoryId = 12;</code>
   * @return The bytes for regulatoryId.
   */
  com.google.protobuf.ByteString
      getRegulatoryIdBytes();

  /**
   * <pre>
   * Internal trader reference
   * </pre>
   *
   * <code>string traderId = 13;</code>
   * @return The traderId.
   */
  java.lang.String getTraderId();
  /**
   * <pre>
   * Internal trader reference
   * </pre>
   *
   * <code>string traderId = 13;</code>
   * @return The bytes for traderId.
   */
  com.google.protobuf.ByteString
      getTraderIdBytes();

  /**
   * <pre>
   * Algo strategy / manual / HFT
   * </pre>
   *
   * <code>string strategyTag = 14;</code>
   * @return The strategyTag.
   */
  java.lang.String getStrategyTag();
  /**
   * <pre>
   * Algo strategy / manual / HFT
   * </pre>
   *
   * <code>string strategyTag = 14;</code>
   * @return The bytes for strategyTag.
   */
  com.google.protobuf.ByteString
      getStrategyTagBytes();

  /**
   * <pre>
   * For linking across events (e.g., parent-child orders)
   * </pre>
   *
   * <code>string correlationId = 15;</code>
   * @return The correlationId.
   */
  java.lang.String getCorrelationId();
  /**
   * <pre>
   * For linking across events (e.g., parent-child orders)
   * </pre>
   *
   * <code>string correlationId = 15;</code>
   * @return The bytes for correlationId.
   */
  com.google.protobuf.ByteString
      getCorrelationIdBytes();
}
